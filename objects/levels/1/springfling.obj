// ----------------------------------------
// Open Surge Engine
// http://opensnc.sourceforge.net
//
// Springfling
//
// Springfling / Grasshopper script originally developed by Alexandre
//
// Changelog:
// 2011-08-20 - first version by Alexandre
// ----------------------------------------

object "Springfling"
{
    requires 0.2.0
    category "enemy" "level 1"
    annotation "Jumps around"
 
    state "main"
    {
        // constants
        let "$gravity = gravity()" // A MAGIC NUMBER. this means: an acceleration, on the y-axis, of $gravity pixels per second squared
        let "$jump_strength = 300" // a maximum speed, on the y-axis, of -$jump_strength pixels per second
        let "$xspeed = 20" // when jumping, I will move, on the x-axis, at a rate of $xmagnitude px/s
        let "$cooldown_time = 1.0" // how long until I jump again
        let "$score = 100" // how much I'm worth

        // variables
        let "$yspeed = 0" // this object will move, on the y-axis, at a rate of $yspeed pixels per second

        // go
        change_state "stopped"
    }

    state "stopped"
    {
        enemy "$score"

        set_animation "Springfling" "0"
        on_timeout "$cooldown_time" "jump"
    }

    state "jump"
    {
        enemy "$score"

        set_animation "Springfling" "1"
        let "$yspeed = -$jump_strength"
        on_animation_finished "play jump sound"
    }

    state "play jump sound"
    {
        let "$volume = 1 - abs(player_xpos() - xpos()) / 640"
        let "$pan = (xpos() - player_xpos()) / 160"
        play_sample "samples/levels/1/springfling.wav" "$volume" "$pan"
        change_state "in the air"
    }

    state "in the air"
    {
        enemy "$score"

        // moves the object on the y axis
        move "0" "$yspeed" // move the object at $yspeed pixels per second
        let "$yspeed = $yspeed + $gravity * dt()" // gravity affects the yspeed

        // the walk command already implements collision with the walls
        walk "$xspeed" // walks at $xspeed pixels per second
        look_at_walking_direction

        // land back on the floor (checks if pixel (xpos(),ypos()) is a brick)
        if "$yspeed <= 0" "in the air"
        if brick_exists(0,0) land
    }

    state "land"
    {
        enemy "$score"

        gravity // will fix its y position if the object has got too deep into the ground
        set_animation "Springfling" "2"
        on_animation_finished "stopped"
    }
}
