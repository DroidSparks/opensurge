// cutscene1 script
// by Alexandre @ 2011-09-15
// updates: 2011-12-28, 2012-01-25, 2012-02-22

// this script sucks. :P
// if you want to study a cutscene, try reading cutscene3.lev instead

object ".cutscene1_startup"
{
    requires 0.2.0
    always_active

    // main
    state "main"
    {
        hide
        request_camera_focus
        set_absolute_position 160 1130
        create_child ".moviefx"
        create_child ".cutscene_skipper"
        create_child ".cutscene1_neon" 0 0 "neon"
        create_child ".cutscene1_surge" 0 0 "surge"
        change_state "step 1"
    }

    // cutscene skipper
    state .cutscene_skipper:on_skip
    {
        play_music musics/silence.ogg -1
        next_level
    }

    // interface with the dialog box
    state .dialogbox.cutscene1:completed_step
    {
        change_child_state dlgbox @get_step
        let $dlgstep=$_fun_value

        if $dlgstep==1 "step 2.2"

        return_to_previous_state
    }

    state .dialogbox.cutscene1:began_step
    {
        change_child_state dlgbox @get_step
        let $dlgstep=$_fun_value

        if $dlgstep==1 "step 2.29"
        if $dlgstep==2 "step 2.3"
        if $dlgstep==3 "step 2.49"
        if $dlgstep==4 "step 2.5"
        if $dlgstep==5 "step 2.59"
        if $dlgstep==6 "step 2.6"
        if $dlgstep==7 "step 2.69"
        if $dlgstep==8 "step 2.7"
        if $dlgstep==9 "step 2.79"
        if $dlgstep==10 "step 3" // waterfall
        if $dlgstep==11 "step 3.5" // Surge giving "orders"
        if $dlgstep==12 "step 3.9" // Neon is talking
        if $dlgstep==13 "step 4.0" // no more waterfalls
        if $dlgstep==14 "step 5.0" // final step

        return_to_previous_state
    }

    state .dialogbox:on_destroy
    {
        change_state "step 5.2" // fade out
    }

    // void
    state void
    {
    }

    // step #1: fade in
    state "step 1"
    {
        create_child ".cutscene1_blackscreen"
        change_state "step 1.1"
    }

    state "step 1.1"
    {
        on_timeout 2.0 "step 1.2"
    }

    state "step 1.2"
    {
        let "$_fade_in = 1"
        let "$_fade_duration = 1.0"
        create_child ".fade_effect"
        create_child ".cutscene1_music"
        change_state "step 1.3"
    }

    state "step 1.3"
    {
        on_timeout $_fade_duration "step 1.4"
        
        if "($t += dt()) < 0.1" "step 1.3"
        change_closest_object_state ".cutscene1_blackscreen" "destroy"
    }

    state "step 1.4"
    {
        change_closest_object_state ".fade_effect" "destroy"
        change_state "step 2"
    }

    // step #2: start talking
    state "step 2"
    {
        create_child .dialogbox.cutscene1 0 0 dlgbox
        change_child_state surge step2
        change_state "step 2.1"
    }

    state "step 2.1"
    {
        // nothing
    }

    state "step 2.2"
    {
    }

    state "step 2.29"
    {
        change_child_state neon step2
    }

    state "step 2.3"
    {
        change_child_state surge step3
        change_child_state neon step3
        change_child_state dlgbox block
        on_timeout 3.0 "step 2.31"
    }

    state "step 2.31"
    {
        change_child_state surge step4
        change_child_state neon step4
        play_sample samples/loud_roar.wav
        change_state "step 2.311"
    }

    state "step 2.311"
    {
        let $t3=0
        on_timeout 0.3 "step 2.32"
    }

    state "step 2.32"
    {
        // earthquake
        //set_absolute_position xpos() 1120+(-1+cond(($t3=1-$t3),0,2))*20*max(0,4-($t2+=dt()))
        set_absolute_position xpos() "1120 + 2 * (4-$t2) * (0.5 + 1.5 * cos((22*pi() * $t2)))"
        let "$t2 += dt()"
        on_timeout 4.0 "step 2.33"
    }

    state "step 2.33"
    {
        set_absolute_position xpos() 1120
        change_child_state dlgbox unblock
        change_child_state surge step5
        change_child_state neon step5
        change_state "step 2.4"
    }

    state "step 2.4"
    {
    }

    state "step 2.49"
    {
        change_child_state neon step6
        change_state void
    }

    state "step 2.5"
    {
        change_child_state surge step6
        change_state void
    }

    state "step 2.59"
    {
        change_child_state neon step7
        change_state void
    }

    state "step 2.6"
    {
        change_child_state surge step7
        change_state void
    }

    state "step 2.69"
    {
        change_child_state neon step8
        change_state void
    }

    state "step 2.7"
    {
        change_child_state surge step8
        change_state void
    }

    state "step 2.79"
    {
        change_child_state neon step9
        change_state void
    }

    // step #3: waterfall
    state "step 3"
    {
        change_child_state dlgbox block
        change_child_state dlgbox hide
        create_child ".cutscene1_waterfall" 0 0 waterfall
        change_state "step 3.1"
    }

    state "step 3.1"
    {
        on_timeout 6.0 "step 3.2"
    }

    state "step 3.2" // Surge says: "Fine..."
    {
        change_child_state dlgbox unblock
        change_closest_object_state .cutscene1_surgesigh fine
        change_state "step 3.3"
    }

    state "step 3.3"
    {
        change_child_state dlgbox show
        change_state "step 3.4"
    }

    state "step 3.4"
    {
    }

    state "step 3.5" // Surge starts "giving orders" ... :p
    {
        change_child_state waterfall show_waterfall
        change_closest_object_state .cutscene1_surgesigh uncross_arms
        change_state "step 3.6"
    }

    state "step 3.6"
    {
        on_timeout 0.5 "step 3.7"
    }

    state "step 3.7"
    {
        change_closest_object_state .cutscene1_surgesigh talk
        change_state "step 3.8"
    }

    state "step 3.8"
    {
    }

    state "step 3.9" // Neon is talking
    {
        change_closest_object_state .cutscene1_surgesigh fadeout
        change_closest_object_state .cutscene1_waterfall create_neon
        change_state "step 3.10"
    }

    state "step 3.10"
    {
    }

    // step #4: no more waterfalls
    state "step 4.0" // no more waterfalls
    {
        change_closest_object_state .cutscene1_neontalk fadeout
        change_closest_object_state .cutscene1_waterfall fadeout
        change_child_state surge step10
        change_child_state neon step10
        change_state "step 4.1"
    }

    state "step 4.1"
    {
    }

    // step #5: go away!
    state "step 5.0"
    {
        change_child_state surge step11
        change_child_state neon step11
        change_state "step 5.1"
    }

    state "step 5.1"
    {
    }

    state "step 5.2" // fade out
    {
        let $oldv=music_volume()
        let $_fade_in=0
        let $_fade_duration=1
        create_child .fade_effect
        change_state "step 5.3" 
    }

    state "step 5.3"
    {
        set_music_volume music_volume()-dt()/2
        on_timeout 1 "step 5.4"
    }

    state "step 5.4"
    {
        set_music_volume music_volume()-dt()/2
        on_timeout 2 "step 5.5"
    }

    state "step 5.5"
    {
        play_music musics/silence.ogg -1
        set_music_volume $oldv
        next_level
    }
}

object ".cutscene1_blackscreen"
{
    requires 0.2.0
    always_active
    detach_from_camera

    state main
    {
        set_zindex 1.0
        set_absolute_position 0 0
        set_animation SD_HUDBLACKSCREEN 0
        create_child .cutscene1_blackscreen_text 0 0 text
        change_state wait
    }

    state wait
    {
    }

    state destroy
    {
        change_child_state text destroy
        destroy
    }
}

object ".cutscene1_blackscreen_text"
{
    requires 0.2.0
    always_active
    detach_from_camera

    state main
    {
        set_zindex 1.1
        set_animation SD_HUDBLACKSCREEN 0
        let $t+=dt()
        set_alpha "cond($t < 0.5, alpha()-2*dt(), cond($t > 1.5, alpha()+2*dt(), 0.0))"
        //textout_centre default_ttf screen_width()/2 screen_height()/2-6 "$CUTSCENE1_SKIP" screen_width()*0.9
        textout_right default_ttf screen_width()-5 screen_height()-45 "$CUTSCENE1_SKIP" screen_width()*0.9
    }

    state destroy
    {
        destroy
    }
}

object ".cutscene1_music"
{
    requires 0.2.0
    always_active

    state main
    {
        hide
        change_state loop
    }

    state loop
    {
        let $t=0
        change_closest_object_state .dialogbox.cutscene1 @get_step
        let $step=$_fun_value
        if "$step<=1 and not($part1)" part1
        if "$step==3 and not($part2)" part2
        if "$step==11 and not($part3)" part3
    }

    state part1
    {
        if ($t+=dt())<1 part1
        let $part1=1
        play_music musics/we_will_never_fight_alone_1.ogg -1
        change_state loop
    }

    state part2
    {
        if ($t+=dt())<1 part2
        let $part2=1
        play_music musics/silence.ogg -1
        change_state loop
    }

    state part3
    {
        if ($t+=dt())<6 part3
        let $part3=1
        play_music musics/we_will_never_fight_alone_2.ogg -1
        change_state loop
    }
}

object .cutscene1_surge
{
    requires 0.2.0
    always_active

    state main
    {
        set_zindex 0.75
        set_absolute_position 178 1197
        set_animation SD_SURGE 29
        look_left
        change_state step1
    }

    state step1
    {
    }

    state step2
    {
        let $n=0.6
        if ($t2+=dt())<$n step2 // wait $n secs until you change the anim
        set_animation SD_SURGE 23
    }

    state step3
    {
        set_animation SD_SURGE 24
    }

    state step4
    {
        let $n=1.6
        if ($t4+=dt())<$n step4 // wait $n secs until you change the anim
        set_animation SD_SURGE 25
    }

    state step5
    {
        let $n=0.275
        if ($t5+=dt())<$n step5 // wait $n secs until you change the anim
        set_animation SD_SURGE 26
    }

    state step6
    {
        set_animation SD_SURGE 27
    }

    state step7
    {
        set_animation SD_SURGE 28
    }

    state step8
    {
        set_animation SD_SURGE 27
        set_animation SD_SURGE 28 // restart animation
        set_animation_frame 1
        change_state freeze
    }

    state step9
    {
    }

    state step10
    {
        set_animation SD_SURGE 30
    }

    state step11 // run away
    {
        set_animation SD_SURGE 2
        look_right
        move 175 0
    }

    // misc
    state freeze
    {
    }
}

object .cutscene1_neon
{
    requires 0.2.0
    always_active

    state main
    {
        set_zindex 0.75
        set_absolute_position 160 1195
        set_animation SD_NEON 29
        look_left
        change_state step1
    }

    state step1
    {
    }

    state step2
    {
        set_animation SD_NEON 21
    }

    state step3
    {
        let $n=1.5
        if ($t3+=dt())<$n step3 // wait $n secs until you change the anim
        set_animation SD_NEON 22
    }

    state step4
    {
        let $n=1.1
        if ($t4+=dt())<$n step4 // wait $n secs until you change the anim
        set_animation SD_NEON 23
    }

    state step5
    {
        set_animation SD_NEON 26
        set_animation_frame 0
    }

    state step6
    {
        set_animation SD_NEON 26
    }

    state step7
    {
        set_animation SD_NEON 30
    }

    state step8
    {
        set_animation SD_NEON 27
    }

    state step9
    {
        set_animation SD_NEON 28
    }

    state step10
    {
        set_animation SD_NEON 31
    }

    state step11 // run away
    {
        set_animation SD_NEON 2
        look_left
        move -175 0
    }

    // misc
    state freeze
    {
    }
}

// waterfall
object ".cutscene1_waterfall"
{
    requires 0.2.0
    always_active
    detach_from_camera

    state main
    {
        set_zindex 1.0
        set_absolute_position 0 0
        set_animation SD_BIGSUNSHINE 0
        set_alpha 0
        change_state fadein
    }

    state fadein
    {
        set_alpha alpha()+1.0*dt()
        on_timeout 2.0 create_surge
    }

    state create_surge
    {
        create_child .cutscene1_surgesigh
        change_state wait
    }

    state create_neon
    {
        //set_animation SD_BIGWATERFALL 0
        change_child_state wf2 fadeout
        create_child .cutscene1_neontalk
        change_state wait
    }

    state wait
    {
    }

    state destroy
    {
        destroy
    }

    state fadeout
    {
        set_alpha alpha()-1.0*dt()
        on_timeout 2.0 destroy
    }

    state show_waterfall
    {
        create_child .cutscene1_waterfall2 0 0 wf2
        return_to_previous_state
    }
}

object ".cutscene1_waterfall2"
{
    requires 0.2.0
    always_active
    detach_from_camera

    state main
    {
        set_zindex 1.00001
        set_absolute_position 0 0
        set_animation SD_BIGWATERFALL 0
        set_alpha 0
        change_state fadein
    }

    state fadein
    {
        set_alpha alpha()+2.0*dt()
    }

    state fadeout
    {
        set_alpha alpha()-2.0*dt()
        on_timeout 1.0 destroy
    }

    state destroy
    {
        destroy
    }
}

// surge *sigh*
object ".cutscene1_surgesigh"
{
    requires 0.2.0
    always_active
    detach_from_camera

    state main
    {
        set_zindex 1.01
        set_absolute_position screen_width()+width() screen_height()
        set_animation SD_SURGESIGH 0
        change_state fadein
    }

    state fadein
    {
        set_absolute_position max(screen_width()/2,xpos()-2*640*dt()) ypos()
        on_timeout 1.7 sigh
    }

    state sigh
    {
        set_animation SD_SURGESIGH 1
    }

    state fine
    {
        set_animation SD_SURGESIGH 2
    }

    state uncross_arms
    {
        set_animation SD_SURGESIGH 3
    }

    state talk
    {
        set_animation SD_SURGESIGH 4
    }

    state fadeout
    {
        move 2*640 0
    }
}

// talking Neon
object ".cutscene1_neontalk"
{
    requires 0.2.0
    always_active
    detach_from_camera

    state main
    {
        set_zindex 1.01
        set_absolute_position screen_width()-2*width() screen_height()-30
        set_animation SD_NEONTALK 0
        change_state fadein
    }

    state fadein
    {
        set_absolute_position min(screen_width()/2,xpos()+2*640*dt()) ypos()
        on_timeout 0.25 talk
    }

    state talk
    {
        set_absolute_position min(screen_width()/2,xpos()+2*640*dt()) ypos()
        set_animation SD_NEONTALK 1
    }

    state fadeout
    {
        move -2*640 0
    }
}










// dialog boxes
// by Alexandre @ 2011-09-23

object .dialogbox.cutscene1
{
    requires 0.2.0
    always_active
    detach_from_camera

    state main
    {
        let $step=0
        let $num_steps=15
        let $_dialogbox_avatar_id=1
        let $_dialogbox_text_id=100

        hide
        create_child .dialogbox.base.background[cutscene] 0 0 background
        create_child .dialogbox.base.avatar 0 0 avatar
        create_child .dialogbox.base.text[typewriter] 0 0 text
        create_child .dialogbox.base.button 0 0 button
        change_state wait
    }

    state wait
    {
    }

    state .dialogbox.base.background:on_appear
    {
        change_child_state text start
        change_state wait
    }

    state .dialogbox.base.background:on_disappear
    {
        change_child_state background destroy
        change_child_state avatar destroy
        change_child_state text destroy
        change_child_state button destroy
        change_parent_state .dialogbox:on_destroy
        destroy
    }

    state .dialogbox.base.text:on_complete
    {
        // displaying the correct avatar and message
        let $step+=1
        let $a=cond($step==0,1,$a)
        let $a=cond($step==1,2,$a)
        let $a=cond($step==2,1,$a)
        let $a=cond($step==3,2,$a)
        let $a=cond($step==4,1,$a)
        let $a=cond($step==5,2,$a)
        let $a=cond($step==6,1,$a)
        let $a=cond($step==7,2,$a)
        let $a=cond($step==8,1,$a)
        let $a=cond($step==9,2,$a)
        let $a=cond($step==10,1,$a)
        let $a=cond($step==11,1,$a)
        let $a=cond($step==12,2,$a)
        let $a=cond($step==13,1,$a)
        let $a=cond($step==14,1,$a)
        let $_dialogbox_text_id=100+$step
        let $_dialogbox_avatar_id=$a

        // tell the parent that the step has changed
        change_parent_state .dialogbox.cutscene1:completed_step

        // ok
        change_state message_delivered
    }

    state .dialogbox.base.text:on_start
    {
        change_parent_state .dialogbox.cutscene1:began_step
        change_state void
    }

    state void
    {
    }

    // ------------------------------------------------

    state message_delivered
    {
        // am I blocked?
        change_child_state button hidden
        if $blocked message_delivered

        // refresh?
        change_child_state button continue
        if $step<$num_steps wants_to_refresh

        // end?
        change_child_state button stop
        change_state completed
    }

    state wants_to_refresh
    {
        on_button_pressed fire1 refresh
    }

    state refresh
    {
        change_child_state avatar refresh
        change_child_state text refresh
        change_state wait
    }

    state completed
    {
        on_button_pressed fire1 disappear
    }

    state disappear
    {
        change_child_state background disappear
        change_state wait
    }

    state hide
    {
        change_child_state background hide
        change_state wait
    }

    state show
    {
        change_child_state background show
        change_state wants_to_refresh
    }

    // returns the step in which the dialog box is in
    state @get_step
    {
        let $_fun_value=$step
        return_to_previous_state
    }

    // blocks this dialog box
    state block
    {
        let $blocked=1
        return_to_previous_state
    }

    // unblocks this dialog
    state unblock
    {
        let $blocked=0
        return_to_previous_state
    }
}
